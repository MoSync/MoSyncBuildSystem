<?xml version='1.0' encoding='UTF-8'?>
<project>
  <actions/>
  <description>Builds the Reload Linux package (with Chromium)</description>
  <logRotator>
    <daysToKeep>7</daysToKeep>
    <numToKeep>30</numToKeep>
    <artifactDaysToKeep>7</artifactDaysToKeep>
    <artifactNumToKeep>30</artifactNumToKeep>
  </logRotator>
  <keepDependencies>false</keepDependencies>
  <properties/>
  <scm class="hudson.scm.NullSCM"/>
  <assignedNode>linux</assignedNode>
  <canRoam>false</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers class="vector"/>
  <concurrentBuild>false</concurrentBuild>
  <builders>
    <hudson.plugins.copyartifact.CopyArtifact plugin="copyartifact@1.22">
      <projectName>Build_Reload_Clients</projectName>
      <filter></filter>
      <target></target>
      <selector class="hudson.plugins.copyartifact.PermalinkBuildSelector">
        <id>lastBuild</id>
      </selector>
    </hudson.plugins.copyartifact.CopyArtifact>
    <hudson.plugins.copyartifact.CopyArtifact plugin="copyartifact@1.22">
      <projectName>Prepare_Reload_Source_Tarball</projectName>
      <filter>ReloadSrc.tar.bz2</filter>
      <target></target>
      <selector class="hudson.plugins.copyartifact.StatusBuildSelector"/>
    </hudson.plugins.copyartifact.CopyArtifact>
    <hudson.tasks.Shell>
      <command>mkdir Reload-trunk
bzip2 -d ReloadSrc.tar.bz2
cd Reload-trunk
tar -x -f ../ReloadSrc.tar

unzip -o $WORKSPACE/\*.zip

</command>
    </hudson.tasks.Shell>
    <hudson.plugins.ruby.Ruby plugin="ruby@1.2">
      <command>require &quot;fileutils&quot;

version = &quot;1.0&quot;
time_stamp = Time.now.strftime(&quot;%Y%m%d-%H%M&quot;)[2..-1]

def sh(command)
  if(!system(command))
    raise(&quot;failed to run #{command}&quot;)
    exist!(1)
  end
end

FileUtils.cd &quot;Reload-trunk&quot;

FileUtils.mkdir &quot;Build&quot;

files_to_copy = [
  &quot;ReloadServer/main.js&quot;,
  &quot;ReloadServer/UI&quot;,
  &quot;ReloadServer/bin&quot;,
  &quot;ReloadServer/templates&quot;,
  &quot;ReloadServer/application&quot;,
  &quot;ReloadServer/express&quot;,
  &quot;ReloadServer/lib&quot;,  
  &quot;ReloadServer/build.dat&quot;,
  &quot;ReloadServer/MoSyncVersion.dat&quot;,
  &quot;ReloadServer/node_modules&quot;
  ]


main_dir = FileUtils.pwd

FileUtils.mkdir_p &quot;Build/MoSync_Reload/server&quot;

puts &quot;Copying Clients&quot;
FileUtils.cp_r &quot;ReloadClient/Clients/Android&quot;, &quot;Build/MoSync_Reload/Android Client&quot;
FileUtils.cp_r &quot;ReloadClient/Clients/iOS&quot;, &quot;Build/MoSync_Reload/iOS Client&quot;
FileUtils.cp_r &quot;ReloadClient/Clients/WindowsPhone&quot;, &quot;Build/MoSync_Reload/WP7 Client&quot;

puts &quot;Copying Readme&quot;
FileUtils.cp_r &quot;ReadMe.txt&quot;, &quot;Build/MoSync_Reload&quot;

FileUtils.cp_r &quot;Licenses&quot;, &quot;Build/MoSync_Reload&quot;



files_to_copy.each { |item|
  FileUtils.cp_r item, &quot;Build/MoSync_Reload/server&quot;
}

sh &quot;cp -rf ReloadAppTemplates/MoSync_Reload_BETA_2_Linux/* Build/MoSync_Reload&quot;</command>
    </hudson.plugins.ruby.Ruby>
  </builders>
  <publishers>
    <hudson.tasks.ArtifactArchiver>
      <artifacts>*.zip</artifacts>
      <latestOnly>true</latestOnly>
    </hudson.tasks.ArtifactArchiver>
    <hudson.tasks.Fingerprinter>
      <targets></targets>
      <recordBuildArtifacts>true</recordBuildArtifacts>
    </hudson.tasks.Fingerprinter>
  </publishers>
  <buildWrappers>
    <hudson.plugins.ws__cleanup.PreBuildCleanup plugin="ws-cleanup@0.10">
      <deleteDirs>false</deleteDirs>
    </hudson.plugins.ws__cleanup.PreBuildCleanup>
  </buildWrappers>
</project>